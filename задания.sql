-- задание 1
create or replace function ИнформацияОМедработнике(персонал_id int)
returns text
as $$
declare 
	результат text;
	последняя_работа record;
begin

	--проверка на существование работника 
	select 'Фамилия: ' || фамилия || '. Адрес: ' || адрес 
	into результат from Медперсонал
	where идентификатор = персонал_id;

	if результат is null then 
		return 'Медработник с ID ' || персонал_id ||' не найден';
	end if;

	--поиск последней работы 
	select Типы_операций.наименование, Трудовая_деятельность.дата,
	Место_работы.учреждение, Трудовая_деятельность.оплата
	into последняя_работа
	from Трудовая_деятельность
	join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор
	join Место_работы on Трудовая_деятельность.место_работы_id = Место_работы.идентификатор
	where Трудовая_деятельность.медперсонал_id = персонал_id
	order by 
	Трудовая_деятельность.договор desc
	limit 1;

	if последняя_работа is null then 
		return результат || '. Медработник еще не приступал к работе';
	end if;

	результат = результат || '. Дата последней работы: ' ||
	последняя_работа.дата || '. Место работы: ' || 
	последняя_работа.учреждение || '. Сумма оплаты: ' || 
	последняя_работа.оплата || '. Операция: ' || 
	последняя_работа.наименование;

	return результат;
	
end;
$$language plpgsql;

select * from ИнформацияОМедработнике(3); -- работник есть и работал
select * from ИнформацияОМедработнике(10); -- работника нет 
select * from ИнформацияОМедработнике(6); -- работник есть, но не работал 

--задание 2
create or replace function ВставкаВТрудовуюДеятельность(
    п_договор integer,
    п_дата varchar(50),
    п_медперсонал_id integer,
    п_место_работы_id integer,
    п_операции_id integer,
    п_количество integer,
    п_оплата numeric(10, 2) default null
)
returns void
as $$
declare
	последний_договор int;
	стоимость_операции numeric(10,2);
begin 
	--проверка на существование места 
	if not exists(select 1 from Место_работы where идентификатор = п_место_работы_id) then
		raise info 'Место работы с ID % не существует', п_место_работы_id;
		return;
	end if;

	--проверка на существование медперсонала 
	if not exists(select 1 from Медперсонал where идентификатор = п_медперсонал_id) then
		raise info 'Медработника с ID % не существует', п_медперсонал_id;
		return;
	end if;
	
	--проверка на существование операции
	if not exists(select 1 from Типы_операций where идентификатор = п_операции_id) then
		raise info 'Операция с ID % не существует', п_операции_id;
		return;
	end if;

	--проверка на проводимость операции в месте
	if not exists (
		select 1 from Операции_в_местах_работы
		where место_работы_id = п_место_работы_id
		and операции_id = п_операции_id
	)then 
		raise info 'Операция с ID % не может проводиться в месте работы c ID %', 
			п_операции_id, п_место_работы_id;
		return;
	end if;

	--проверка договора
	select max(договор) into последний_договор from Трудовая_деятельность;
	if п_договор <= последний_договор then
		raise info 'Номер договора должен быть больше последнего номера договора';
		return;
	end if;

	--проверка количества
	if п_количество <= 0 then
		raise info 'Кол-во должно быть больше 0';
		return;
	end if;

	--проверка оплаты 
	select стоимость into стоимость_операции
	from Типы_операций 
	where идентификатор = п_операции_id;
	if п_оплата != стоимость_операции * п_количество then 
		raise info 'Оплата не совпадает с расчетной: %', стоимость_операции * п_количество;
		return;
	end if;

	--проверка даты
	if п_дата not in('Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье') then
		raise info 'Некорректная дата';
		return;
	end if;

	insert into Трудовая_деятельность(договор, дата, медперсонал_id, место_работы_id, операции_id, количество, оплата)
	values (п_договор, п_дата, п_медперсонал_id, п_место_работы_id, п_операции_id, п_количество, п_оплата);
	raise info 'Запись успешно добавлена';
end;
$$language plpgsql;

select ВставкаВТрудовуюДеятельность(51058, 'Вторник', 1, 6, 2, 2, 28000.00); --запись подходит для вставки
select ВставкаВТрудовуюДеятельность(51059, 'Вторник', 10, 6, 2, 2, 28000.00); --медперсонал не существует 
select ВставкаВТрудовуюДеятельность(51060, 'Вторник', 1, 122, 2, 2, 28000.00); --место не существует
select ВставкаВТрудовуюДеятельность(51060, 'Вторник', 1, 6, 100, 2, 28000.00); --операция не существует
select ВставкаВТрудовуюДеятельность(51060, 'Вторник', 1, 6, 1, 2, 28000.00); --операция не проводится в месте
select ВставкаВТрудовуюДеятельность(51039, 'Вторник', 1, 6, 2, 2, 28000.00); --договор не соблюдает возрастающую последовательность
select ВставкаВТрудовуюДеятельность(51059, 'Вторник', 1, 6, 2, 0, 28000.00); --количество не больше нуля
select ВставкаВТрудовуюДеятельность(51059, 'Вторник', 1, 6, 2, 2, 27000.00); --неверная оплата
select ВставкаВТрудовуюДеятельность(51059, '12.12.2012', 1, 6, 2, 2, 28000.00); --не подходящая дата

--задание 3
create or replace function ПодсчётСтоимостиОперации()
returns trigger
as $$
begin 
	if new.оплата is null then 
		select стоимость * new.количество
		into new.оплата 
		from Типы_операций
		where идентификатор = new.операции_id;
	end if;
	return new;
end;
$$language plpgsql;

create or replace trigger ПодсчётСтоимостиОперации
before insert on Трудовая_деятельность
for each row execute function ПодсчётСтоимостиОперации();

select ВставкаВТрудовуюДеятельность(51060, 'Вторник', 3, 1, 7, 3); --стоимость не указана

--задание 4
create or replace view РасчетыПоОперациям(номер_договора, фамилия_работника, налог_работника, 
	название_операции, количество_операций, оплата_за_операцию)
as (select Трудовая_деятельность.договор, Медперсонал.фамилия, Медперсонал.налог_percent,
	Типы_операций.наименование, Трудовая_деятельность.количество, 
	round(Трудовая_деятельность.оплата - Трудовая_деятельность.оплата * Медперсонал.налог_percent / 100, 2)
from Трудовая_деятельность
join Медперсонал on Трудовая_деятельность.медперсонал_id = Медперсонал.идентификатор
join Типы_операций on Трудовая_деятельность.операции_id = Типы_операций.идентификатор);

select * from РасчетыПоОперациям;
select * from РасчетыПоОперациям where фамилия_работника = 'Бессонов';
update Медперсонал set налог_percent = 15 where фамилия = 'Бессонов';
select * from РасчетыПоОперациям where фамилия_работника = 'Бессонов';